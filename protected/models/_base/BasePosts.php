<?php

/**
 * This is the model base class for the table "{{posts}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Posts".
 *
 * Columns in table "{{posts}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $ID
 * @property string $post_author
 * @property string $post_date
 * @property string $post_date_gmt
 * @property string $post_content
 * @property string $post_title
 * @property string $post_excerpt
 * @property string $post_status
 * @property string $comment_status
 * @property string $ping_status
 * @property string $post_password
 * @property string $post_name
 * @property string $to_ping
 * @property string $pinged
 * @property string $post_modified
 * @property string $post_modified_gmt
 * @property string $post_content_filtered
 * @property string $post_parent
 * @property string $guid
 * @property integer $menu_order
 * @property string $post_type
 * @property string $post_mime_type
 * @property string $comment_count
 *
 */
abstract class BasePosts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{posts}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Posts|Posts', $n);
	}

	public static function representingColumn() {
		return 'post_date';
	}

	public function rules() {
		return array(
			array('post_content, post_title, post_excerpt, to_ping, pinged, post_content_filtered', 'required'),
			array('menu_order', 'numerical', 'integerOnly'=>true),
			array('post_author, post_status, comment_status, ping_status, post_password, post_parent, post_type, comment_count', 'length', 'max'=>20),
			array('post_name', 'length', 'max'=>200),
			array('guid', 'length', 'max'=>255),
			array('post_mime_type', 'length', 'max'=>100),
			array('post_date, post_date_gmt, post_modified, post_modified_gmt', 'safe'),
			array('post_author, post_date, post_date_gmt, post_status, comment_status, ping_status, post_password, post_name, post_modified, post_modified_gmt, post_parent, guid, menu_order, post_type, post_mime_type, comment_count', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ID, post_author, post_date, post_date_gmt, post_content, post_title, post_excerpt, post_status, comment_status, ping_status, post_password, post_name, to_ping, pinged, post_modified, post_modified_gmt, post_content_filtered, post_parent, guid, menu_order, post_type, post_mime_type, comment_count', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ID' => Yii::t('app', 'ID'),
			'post_author' => Yii::t('app', 'Post Author'),
			'post_date' => Yii::t('app', 'Post Date'),
			'post_date_gmt' => Yii::t('app', 'Post Date Gmt'),
			'post_content' => Yii::t('app', 'Post Content'),
			'post_title' => Yii::t('app', 'Post Title'),
			'post_excerpt' => Yii::t('app', 'Post Excerpt'),
			'post_status' => Yii::t('app', 'Post Status'),
			'comment_status' => Yii::t('app', 'Comment Status'),
			'ping_status' => Yii::t('app', 'Ping Status'),
			'post_password' => Yii::t('app', 'Post Password'),
			'post_name' => Yii::t('app', 'Post Name'),
			'to_ping' => Yii::t('app', 'To Ping'),
			'pinged' => Yii::t('app', 'Pinged'),
			'post_modified' => Yii::t('app', 'Post Modified'),
			'post_modified_gmt' => Yii::t('app', 'Post Modified Gmt'),
			'post_content_filtered' => Yii::t('app', 'Post Content Filtered'),
			'post_parent' => Yii::t('app', 'Post Parent'),
			'guid' => Yii::t('app', 'Guid'),
			'menu_order' => Yii::t('app', 'Menu Order'),
			'post_type' => Yii::t('app', 'Post Type'),
			'post_mime_type' => Yii::t('app', 'Post Mime Type'),
			'comment_count' => Yii::t('app', 'Comment Count'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ID', $this->ID, true);
		$criteria->compare('post_author', $this->post_author, true);
		$criteria->compare('post_date', $this->post_date, true);
		$criteria->compare('post_date_gmt', $this->post_date_gmt, true);
		$criteria->compare('post_content', $this->post_content, true);
		$criteria->compare('post_title', $this->post_title, true);
		$criteria->compare('post_excerpt', $this->post_excerpt, true);
		$criteria->compare('post_status', $this->post_status, true);
		$criteria->compare('comment_status', $this->comment_status, true);
		$criteria->compare('ping_status', $this->ping_status, true);
		$criteria->compare('post_password', $this->post_password, true);
		$criteria->compare('post_name', $this->post_name, true);
		$criteria->compare('to_ping', $this->to_ping, true);
		$criteria->compare('pinged', $this->pinged, true);
		$criteria->compare('post_modified', $this->post_modified, true);
		$criteria->compare('post_modified_gmt', $this->post_modified_gmt, true);
		$criteria->compare('post_content_filtered', $this->post_content_filtered, true);
		$criteria->compare('post_parent', $this->post_parent, true);
		$criteria->compare('guid', $this->guid, true);
		$criteria->compare('menu_order', $this->menu_order);
		$criteria->compare('post_type', $this->post_type, true);
		$criteria->compare('post_mime_type', $this->post_mime_type, true);
		$criteria->compare('comment_count', $this->comment_count, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}